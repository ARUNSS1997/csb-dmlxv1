{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","latitude","setLatitude","longitude","setLongitude","weather","setWeather","temperature","setTemperature","cityName","setCityName","savePositionToState","position","coords","fetchWeather","window","navigator","geolocation","getCurrentPosition","axios","get","res","data","main","temp","name","console","log","error","useEffect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAgDeA,MA5Cf,WACE,MAAgCC,mBAAS,GAAE,mBAApCC,EAAQ,KAAEC,EAAW,KAC5B,EAAkCF,mBAAS,GAAE,mBAAtCG,EAAS,KAAEC,EAAY,KAC9B,EAA8BJ,mBAAS,IAAG,mBAAnCK,EAAO,KAAEC,EAAU,KAC1B,EAAsCN,mBAAS,GAAE,mBAA1CO,EAAW,KAAEC,EAAc,KAClC,EAAgCR,mBAAS,IAAG,mBAArCS,EAAQ,KAAEC,EAAW,KAEtBC,EAAsB,SAACC,GAC3BV,EAAYU,EAASC,OAAOZ,UAC5BG,EAAaQ,EAASC,OAAOV,UAC/B,EAEMW,EAAY,iDAAG,uHAEXC,OAAOC,UAAUC,YAAYC,mBACjCP,GACA,KAAD,kBACiBQ,IAAMC,IAAI,uDAAD,OAC8BnB,EAAQ,gBAAQE,EAAS,yDAChF,KAAD,EAFKkB,EAAG,OAGTb,EAAea,EAAIC,KAAKC,KAAKC,MAC7Bd,EAAYW,EAAIC,KAAKG,MACrBnB,EAAWe,EAAIC,KAAKjB,QAAQ,GAAGkB,MAC/BG,QAAQC,IAAIN,EAAIC,MAAM,kDAEtBI,QAAQE,MAAM,EAAD,IAAM,0DAEtB,kBAfiB,mCAqBlB,OAJAC,qBAAU,WACRf,GACF,GAAG,CAACb,EAAUE,IAGZ,qBAAK2B,UAAU,MAAK,SAClB,sBAAKA,UAAU,iBAAgB,UAC7B,6BAAKrB,IACL,+BAAKF,EAAW,WAChB,6BAAKF,QAIb,EClCe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.f3425c59.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [cityName, setCityName] = useState(\"\");\n\n  const savePositionToState = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(\n        savePositionToState\n      );\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric`\n      );\n      setTemperature(res.data.main.temp);\n      setCityName(res.data.name);\n      setWeather(res.data.weather[0].main);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__container\">\n        <h1>{cityName}</h1>\n        <h2>{temperature}ÂºC</h2>\n        <h2>{weather}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}